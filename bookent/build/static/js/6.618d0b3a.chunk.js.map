{"version":3,"sources":["components/assets/read1.svg","components/bookDetails/style.module.css","components/bookDetails/details.js","components/bookDetails.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["module","exports","Mapp","lazy","Details","book","user","addToFav","startConv","ownerBooks","favBefore","favList","length","i","_id","favSm","useEffect","window","scrollTo","top","behavior","className","BookCss","upperdetails","details","bookname","bookName","bookgen","bookGenere","booktime","time","love","type","checked","onChange","e","target","src","alt","bookowner","author","Year","isbn","country","owner","contacts","booknum","onClick","navigator","clipboard","writeText","ownerPhone","alert","ownerId","chat","bookcover","coverPhoto","process","defaultCover","lowerdetails","bookdesc","description","bookLocation","GeoLA","location","split","GeoLO","map","bk","style","backgroundImage","bookdetails","to","pathname","state","withRouter","useLocation","useContext","AuthContext","setuser","connected","setconnected","userId","useState","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","setowner","newConv","setnewConv","socket","useRef","scrollRef","startChat","setstartChat","useLayoutEffect","theme","localStorage","getItem","document","documentElement","toString","themelight","themedark","axios","get","headers","JSON","parse","token","then","res","data","reload","current","io","CHAT_API","on","sender","senderId","text","createdAt","members","includes","prev","emit","getConversations","a","one","filter","conv","console","log","getMessages","handleSubmit","preventDefault","message","conversationId","Date","now","receiverId","find","member","post","scrollIntoView","main","books","put","catch","err","params","booksList","ChatCss","messengerSmall","chatBox","chatBoxWrapper","username","chatHeader","profileImg","chatBoxTop","m","ref","own","chatBoxBottom","chatMessageInput","placeholder","value","chatSubmitButton","noConversationText","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable"],"mappings":"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","file":"static/js/6.618d0b3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/read1.f92f6035.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themelight\":\"style_themelight__1CL3i\",\"themedark\":\"style_themedark__kahU1\",\"main\":\"style_main__WQqR_\",\"books\":\"style_books__3wqRy\",\"book\":\"style_book__YdEX3\",\"upperdetails\":\"style_upperdetails__2Bnky\",\"details\":\"style_details__3ohSl\",\"bookname\":\"style_bookname__3DTeS\",\"bookgen\":\"style_bookgen__3aiKN\",\"booktime\":\"style_booktime__2ihmE\",\"love\":\"style_love__11UZs\",\"bookowner\":\"style_bookowner__1_RzB\",\"booknum\":\"style_booknum__2i1H_\",\"contacts\":\"style_contacts__1usKq\",\"chat\":\"style_chat__2O1TC\",\"bookcover\":\"style_bookcover__2Ft5c\",\"lowerdetails\":\"style_lowerdetails__2jMxM\",\"bookdesc\":\"style_bookdesc__BMTXb\",\"ownerBooks\":\"style_ownerBooks__2waS7\",\"bookdetails\":\"style_bookdetails__PhAtl\"};","import BookCss from './style.module.css';\r\nimport defaultCover from '../assets/read1.svg'\r\nimport { lazy,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nconst Mapp = lazy(() => import('./Map2'))\r\n\r\nfunction Details({ book, user, addToFav, startConv, ownerBooks }) {\r\n    let favBefore = false\r\n\r\n    if (user?.favList && user?.favList.length > 0) {\r\n        for (let i = 0; i < user?.favList.length; i++) {\r\n            if (book._id === user.favList[i]._id)\r\n                favBefore = true\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'})\r\n    }, [book])\r\n\r\n    function copyNum() {\r\n        navigator.clipboard.writeText(book.ownerPhone)\r\n        alert('phone copied !')\r\n    }\r\n\r\n\r\n    function favSm(_id){\r\n        if (user?.favList && user?.favList.length > 0) {\r\n            for (let i = 0; i < user?.favList.length; i++) {\r\n                if (_id === user.favList[i]._id)\r\n                return true\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <main className={BookCss.book}>\r\n                <div className={BookCss.upperdetails}>\r\n                    <section className={BookCss.details}>\r\n                        <p className={BookCss.bookname}>{book.bookName}</p>\r\n                        <p className={BookCss.bookgen}>Genere : {book.bookGenere}</p>\r\n                        <p className={BookCss.booktime}>Loan time : {book.time} days</p>\r\n                        <div className={BookCss.love}>\r\n                            <input type='checkbox' checked={favBefore} onChange={(e) => { addToFav(e.target.checked, book) }} />\r\n                            <img src=\"/assets/love.svg\" alt='add to favourites'/>\r\n                        </div>\r\n                        <p className={BookCss.bookowner}>Author : {book.author}</p>\r\n                        <p className={BookCss.bookowner}>Year : {book.Year}</p>\r\n                        <p className={BookCss.bookowner}>ISBN : {book.isbn}</p>\r\n                        <p className={BookCss.bookowner}>Country :  {book.country}</p>\r\n                        <p className={BookCss.bookowner}>Owner : {book.owner}</p>\r\n                        <div className={BookCss.contacts}>\r\n                            <button className={BookCss.booknum} onClick={copyNum}>\r\n                                <p> {book.ownerPhone}</p>\r\n                                <div><img src='/assets/phone.svg' alt='number phone'/></div>\r\n                            </button>\r\n                            {user._id != book.ownerId &&\r\n                                <button onClick={startConv} className={BookCss.chat}>\r\n                                    <img src='/assets/message.svg' alt='message' alt='chat'/>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </section>\r\n                    <section className={BookCss.bookcover}>\r\n                        <img src={book.coverPhoto ? `${process.env.REACT_APP_API_URL}/booksImages/${book.coverPhoto}` : `${defaultCover}`} alt={book.bookName}/>\r\n                    </section>\r\n                </div>\r\n                <div className={BookCss.lowerdetails}>\r\n                    <p className={BookCss.bookdesc}>{book.description}</p>\r\n\r\n                    <div className={BookCss.bookLocation}>\r\n                        <Mapp\r\n                            GeoLA={book.location[0].split(',')[0]}\r\n                            GeoLO={book.location[0].split(',')[1]}\r\n\r\n                        />\r\n                    </div>\r\n\r\n                    {ownerBooks?.length>1 &&\r\n                        <div className={BookCss.ownerBooks}>\r\n                            <h4>Also by this user :</h4>\r\n                            {ownerBooks &&\r\n                                ownerBooks.map((bk) => (\r\n                                    bk._id != book._id &&\r\n                                    <div className={BookCss.book} style={{ backgroundImage: bk.coverPhoto ? `url(${process.env.REACT_APP_API_URL}/booksImages/${bk.coverPhoto})` : `url(${defaultCover})` }}>\r\n                                        <div className={BookCss.bookdetails}>\r\n                                            <Link to={{ pathname: `/Book/${bk._id}`, state: { book:bk } }}>\r\n                                                <p className={BookCss.bookname}>{bk.bookName}</p>\r\n                                            </Link>\r\n                                            <div className={BookCss.love}>\r\n                                                <input type='checkbox' checked={favSm(bk._id)} onChange={(e) => { addToFav(e.target.checked, bk) }} />\r\n                                                <img src=\"/assets/love.svg\" alt='add to favourites'/>\r\n                                            </div>\r\n                                            <p className={BookCss.bookgen}>Genere: {bk.bookGenere}</p>\r\n                                            <p className={BookCss.bookdesc}>{bk.description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Details;","import { useLocation, withRouter } from \"react-router-dom\"\r\nimport { useLayoutEffect, useContext, useEffect, useRef, useState } from 'react';\r\nimport { AuthContext } from '../AuthContext'\r\nimport axios from 'axios'\r\nimport BookCss from './bookDetails/style.module.css';\r\nimport ChatCss from './chat/style.module.css';\r\nimport NavBar from './favorites/navBar';\r\nimport Footer from './home/footer';\r\nimport Details from './bookDetails/details';\r\nimport Message from './chat/message'\r\nimport { io } from \"socket.io-client\";\r\n\r\n\r\nfunction BookDetails() {\r\n    const location = useLocation()\r\n    const { book } = location.state ? location.state : null\r\n\r\n    const { user, setuser, connected, setconnected } = useContext(AuthContext)\r\n    let userId = ''\r\n    if (user) userId = user._id\r\n\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const [owner, setowner] = useState({});\r\n    const [newConv, setnewConv] = useState(false)\r\n    const socket = useRef();\r\n    const scrollRef = useRef();\r\n    const [startChat, setstartChat] = useState(false)\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        let theme = localStorage.getItem('theme')\r\n        document.documentElement.className = theme.toString() === 'themelight' ?\r\n            BookCss.themelight : BookCss.themedark\r\n\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        })\r\n    }, [])\r\n\r\n\r\n    // add book to favorite\r\n\r\n    const addToFav = (e, book) => {\r\n        if (e) {\r\n            axios.put(`${process.env.REACT_APP_API_URL}/addToFav`, { book, user },\r\n                {\r\n                    headers: {\r\n                        \"x-access-token\": JSON.parse(localStorage.getItem('token'))?.token\r\n                    }\r\n                })\r\n                .then(res => setuser(res.data))\r\n                .catch(err => console.log(err))\r\n        }\r\n        else {\r\n            axios.put(`${process.env.REACT_APP_API_URL}/removeToFav`, { book, user },\r\n                {\r\n                    headers: {\r\n                        \"x-access-token\": JSON.parse(localStorage.getItem('token'))?.token\r\n                    }\r\n                })\r\n                .then(res => setuser(res.data))\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/getOwner/${book.ownerId}`, {\r\n            headers: {\r\n                \"x-access-token\": JSON.parse(localStorage.getItem('token'))?.token\r\n            }\r\n        }).then(res => {\r\n            setowner(res.data)\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (connected)\r\n            window.location.reload()\r\n    }, [])\r\n\r\n\r\n\r\n    function startConv(params) {\r\n        setstartChat(true)\r\n        if (conversations.length === 0) {\r\n            let senderId = userId\r\n            let receiverId = book.ownerId\r\n            axios.post(`${process.env.REACT_APP_API_URL}/newConv`, { senderId, receiverId })\r\n                .then(setnewConv(true))\r\n                .catch()\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        socket.current = io(`ws:${process.env.CHAT_API}`);\r\n        setconnected(true)\r\n        socket.current.on(\"getMessage\", (data) => {\r\n            setArrivalMessage({\r\n                sender: data.senderId,\r\n                text: data.text,\r\n                createdAt: data.createdAt,\r\n            });\r\n        });\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        arrivalMessage &&\r\n            currentChat?.members.includes(arrivalMessage.sender) &&\r\n            setMessages((prev) => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage, currentChat]);\r\n\r\n\r\n    useEffect(() => {\r\n        socket.current.emit(\"addUser\", userId);\r\n        // socket.current.on(\"getUsers\", (users) => {\r\n        //   setOnlineUsers(\r\n        //     user.followings.filter((f) => users.some((u) => u.userId === f))\r\n        //   );\r\n        // });\r\n    }, [user, newConv]);\r\n\r\n\r\n    //  get conv\r\n\r\n    useEffect(() => {\r\n        const getConversations = async () => {\r\n            try {\r\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/getConv/${userId}`);\r\n                const one = res.data.filter(conv => (conv.members[1] === book.ownerId))\r\n                setConversations(one);\r\n                setCurrentChat(one[0])\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getConversations();\r\n    }, [userId, newConv])\r\n\r\n\r\n    // get msgs\r\n\r\n    useEffect(() => {\r\n        const getMessages = async () => {\r\n            try {\r\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/getMsg/${currentChat?._id}`);\r\n                setMessages(res.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getMessages();\r\n    }, [currentChat])\r\n\r\n\r\n    // new msg\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (newMessage) {\r\n            const message = {\r\n                sender: userId,\r\n                text: newMessage,\r\n                conversationId: currentChat._id,\r\n                createdAt: Date.now()\r\n\r\n            };\r\n\r\n            const receiverId = currentChat.members.find(\r\n                (member) => member !== userId\r\n            );\r\n\r\n            socket.current.emit(\"sendMessage\", {\r\n                senderId: userId,\r\n                receiverId,\r\n                text: newMessage,\r\n                createdAt: Date.now()\r\n            });\r\n\r\n            try {\r\n                const res = await axios.post(`${process.env.REACT_APP_API_URL}/addMsg/`, { message });\r\n                setMessages([...messages, res.data]);\r\n                setNewMessage(\"\");\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages , startChat]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n\r\n            <div className={BookCss.main}>\r\n\r\n                <div className={BookCss.books}>\r\n                    {<Details book={book} user={user} addToFav={addToFav} startConv={startConv} ownerBooks={owner.booksList}/>}\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {userId != book.ownerId && startChat &&\r\n\r\n\r\n                <div className={ChatCss.messengerSmall}>\r\n                    <div className={ChatCss.chatBox}>\r\n                        <div className={ChatCss.chatBoxWrapper}>\r\n\r\n                        {owner?.username &&\r\n                            <div className={ChatCss.chatHeader}>\r\n                                <img\r\n                                    src={\r\n                                        owner?.profileImg ?\r\n                                            `${process.env.REACT_APP_API_URL}/usersImages/${owner.profileImg}`\r\n                                            :\r\n                                            '/assets/user.svg'\r\n                                    }\r\n                                    alt=\"user\"\r\n                                />\r\n                                <span>{owner?.username}</span>\r\n\r\n                            </div>\r\n                        }\r\n                            {currentChat ? (\r\n                                <>\r\n                                    <div className={ChatCss.chatBoxTop}>\r\n                                        {messages.map((m) => (\r\n                                            <div ref={scrollRef}>\r\n                                                <Message message={m} own={m.sender === userId} owner={m.sender === userId ? user : owner} />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className={ChatCss.chatBoxBottom}>\r\n                                        <textarea\r\n                                            className={ChatCss.chatMessageInput}\r\n                                            placeholder=\"write something...\"\r\n                                            onChange={(e) => setNewMessage(e.target.value)}\r\n                                            value={newMessage}\r\n                                        ></textarea>\r\n                                        <button className={ChatCss.chatSubmitButton} onClick={handleSubmit}>\r\n                                            <img src=\"/assets/send.svg\" alt=\"send\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <span className={ChatCss.noConversationText}>\r\n                                    Open a conversation to start a chat.\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(BookDetails);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}