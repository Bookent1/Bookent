{"version":3,"sources":["components/home/navBar.js"],"names":["NavBar","props","refMenu","useRef","countryModal","useContext","AuthContext","logout","user","useLayoutEffect","theme","localStorage","getItem","document","documentElement","className","toString","HomeCss","themelight","themedark","navbar","logoDiv","to","src","big","loading","alt","small","addDiv","infosDiv","menu","ref","categs","id","categorys","navi","dropdown","value","onClick","e","setGenere","target","categoryList","map","category","countriesSelect","current","style","countriesModal","countries","country","setCountry","countriesList","dark","toggleButtonCover","buttonCover","button","r","button3","type","checkbox","onChange","checked","setItem","defaultChecked","knobs","layer","profile","profileImg","process","username","hamDiv","hamcheck","ham"],"mappings":"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","file":"static/js/21.9926e1d5.chunk.js","sourcesContent":["import React, { useRef, useContext,useLayoutEffect } from 'react';\r\nimport HomeCss from './style.module.css';\r\nimport { AuthContext } from '../../AuthContext'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction NavBar(props) {\r\n    const refMenu = useRef()\r\n    const countryModal = useRef()\r\n    const { logout, user } = useContext(AuthContext)\r\n\r\n    function showMenu(e) {\r\n        if (e.target.checked) {\r\n            refMenu.current.style = 'display:flex'\r\n        }\r\n        else {\r\n            refMenu.current.style = 'display:none'\r\n            countryModal.current.style = 'display:none'\r\n        }\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        let theme = localStorage.getItem('theme')\r\n        document.documentElement.className = theme.toString() === 'themelight' ?\r\n            HomeCss.themelight : HomeCss.themedark\r\n    }, [])\r\n\r\n    function darkToggle(e) {\r\n        if (e.target.checked) {\r\n            document.documentElement.className = HomeCss.themedark\r\n            localStorage.setItem('theme', 'themedark')\r\n        } else {\r\n            document.documentElement.className = HomeCss.themelight\r\n            localStorage.setItem('theme', 'themelight')\r\n        }\r\n    }\r\n\r\n\r\n    function toggleCountry(e) {\r\n        countryModal.current.style = 'display:block'\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={HomeCss.navbar}>\r\n                <div className={HomeCss.logoDiv}>\r\n                    <Link to='/home'>\r\n                        <img src=\"/assets/bookent logo black.svg\" className={HomeCss.big} loading='lazy' alt='bookent logo'/>\r\n                        <img src=\"/assets/logo small.svg\" className={HomeCss.small} loading='lazy' alt='bookent logo'/>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className={HomeCss.addDiv}>\r\n                    <Link to='/addBook'>\r\n                        <img src=\"/assets/add.svg\"  loading='lazy' alt='add book'/>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className={HomeCss.infosDiv}>\r\n                    <div className={HomeCss.menu} ref={refMenu}>\r\n\r\n                        <div className={HomeCss.categs}>\r\n\r\n                            <div id={HomeCss.categorys}>\r\n                                <div className={HomeCss.navi}>\r\n                                    <p>Category</p>\r\n                                </div>\r\n                                <div className={HomeCss.dropdown}>\r\n                                    <nav>\r\n                                        <ul>\r\n                                            <button value={''} onClick={e => props.setGenere(e.target.value)}>All</button>\r\n                                            {props.categoryList.map(category => (<button key={category} value={category} onClick={e => props.setGenere(e.target.value)}>{category}</button>))}\r\n                                        </ul>\r\n                                    </nav>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={HomeCss.navi}>\r\n                                <Link to='/chat'>\r\n                                    <div>\r\n                                        <p>Messages</p>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n\r\n                            <div className={HomeCss.navi}>\r\n                                <div onClick={logout}>\r\n                                    <p>Log out</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={`${HomeCss.navi}  ${HomeCss.countriesSelect}`}>\r\n                                <div onClick={toggleCountry}>\r\n                                    <p>change country</p>\r\n                                </div>\r\n\r\n                                <section className={HomeCss.countriesModal} ref={countryModal}>\r\n                                    <h5>country</h5>\r\n                                    <section className={HomeCss.countries}>\r\n                                        <div className={HomeCss.country} onClick={() => {\r\n                                            props.setCountry('')\r\n                                            countryModal.current.style = 'display:none'\r\n                                        }}>\r\n                                            <p>Any country</p>\r\n                                        </div>\r\n                                        {props.countriesList.map(country => (\r\n                                            <div className={HomeCss.country} key={country}\r\n                                                onClick={() => {\r\n                                                    props.setCountry(country)\r\n                                                    countryModal.current.style = 'display:none'\r\n                                                }}>\r\n                                                <p>{country}</p>\r\n                                            </div>\r\n                                        ))}\r\n                                    </section>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={HomeCss.dark}>\r\n                            <div className={HomeCss.toggleButtonCover}>\r\n                                <div className={HomeCss.buttonCover}>\r\n                                    <div className={`${HomeCss.button}  ${HomeCss.r}`} id={HomeCss.button3}>\r\n                                        <input type=\"checkbox\" className={HomeCss.checkbox} onChange={darkToggle} defaultChecked={localStorage.getItem('theme') === 'themedark' ? true : false} />\r\n                                        <div className={HomeCss.knobs}></div>\r\n                                        <div className={HomeCss.layer}></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Link to='/profile'>\r\n                            <div className={HomeCss.profile}>\r\n                                <img src={user.profileImg && `${process.env.REACT_APP_API_URL}/usersImages/${user.profileImg}` || '/assets/user.svg'} alt='profile' />\r\n                                <span>{user.username}</span>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={HomeCss.hamDiv}>\r\n                        <input type='checkbox' id={HomeCss.hamcheck} onChange={showMenu} />\r\n                        <div id={HomeCss.ham}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar;"],"sourceRoot":""}